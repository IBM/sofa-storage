# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import storage_ctrl_pb2 as storage__ctrl__pb2


class CtrlStub(object):
    """*

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CTRLCreateVolume = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLCreateVolume',
                request_serializer=storage__ctrl__pb2.CTRLCreateVolumeRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLCreateVolumeResponse.FromString,
                )
        self.CTRLDeleteVolume = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLDeleteVolume',
                request_serializer=storage__ctrl__pb2.CTRLDeleteVolumeRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLDeleteVolumeResponse.FromString,
                )
        self.CTRLAttachVolume = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLAttachVolume',
                request_serializer=storage__ctrl__pb2.CTRLAttachVolumeRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLAttachVolumeResponse.FromString,
                )
        self.CTRLDetachVolume = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLDetachVolume',
                request_serializer=storage__ctrl__pb2.CTRLDetachVolumeRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLDetachVolumeResponse.FromString,
                )
        self.CTRLListVolumes = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLListVolumes',
                request_serializer=storage__ctrl__pb2.CTRLListVolumesRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLListVolumesResponse.FromString,
                )
        self.CTRLCreateController = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLCreateController',
                request_serializer=storage__ctrl__pb2.CTRLCreateControllerRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLCreateControllerResponse.FromString,
                )
        self.CTRLDeleteController = channel.unary_unary(
                '/storage_ctrl.Ctrl/CTRLDeleteController',
                request_serializer=storage__ctrl__pb2.CTRLDeleteControllerRequest.SerializeToString,
                response_deserializer=storage__ctrl__pb2.CTRLDeleteControllerResponse.FromString,
                )


class CtrlServicer(object):
    """*

    """

    def CTRLCreateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLDeleteVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLAttachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLDetachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLListVolumes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLCreateController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTRLDeleteController(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CtrlServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CTRLCreateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLCreateVolume,
                    request_deserializer=storage__ctrl__pb2.CTRLCreateVolumeRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLCreateVolumeResponse.SerializeToString,
            ),
            'CTRLDeleteVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLDeleteVolume,
                    request_deserializer=storage__ctrl__pb2.CTRLDeleteVolumeRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLDeleteVolumeResponse.SerializeToString,
            ),
            'CTRLAttachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLAttachVolume,
                    request_deserializer=storage__ctrl__pb2.CTRLAttachVolumeRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLAttachVolumeResponse.SerializeToString,
            ),
            'CTRLDetachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLDetachVolume,
                    request_deserializer=storage__ctrl__pb2.CTRLDetachVolumeRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLDetachVolumeResponse.SerializeToString,
            ),
            'CTRLListVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLListVolumes,
                    request_deserializer=storage__ctrl__pb2.CTRLListVolumesRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLListVolumesResponse.SerializeToString,
            ),
            'CTRLCreateController': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLCreateController,
                    request_deserializer=storage__ctrl__pb2.CTRLCreateControllerRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLCreateControllerResponse.SerializeToString,
            ),
            'CTRLDeleteController': grpc.unary_unary_rpc_method_handler(
                    servicer.CTRLDeleteController,
                    request_deserializer=storage__ctrl__pb2.CTRLDeleteControllerRequest.FromString,
                    response_serializer=storage__ctrl__pb2.CTRLDeleteControllerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'storage_ctrl.Ctrl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Ctrl(object):
    """*

    """

    @staticmethod
    def CTRLCreateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLCreateVolume',
            storage__ctrl__pb2.CTRLCreateVolumeRequest.SerializeToString,
            storage__ctrl__pb2.CTRLCreateVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLDeleteVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLDeleteVolume',
            storage__ctrl__pb2.CTRLDeleteVolumeRequest.SerializeToString,
            storage__ctrl__pb2.CTRLDeleteVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLAttachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLAttachVolume',
            storage__ctrl__pb2.CTRLAttachVolumeRequest.SerializeToString,
            storage__ctrl__pb2.CTRLAttachVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLDetachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLDetachVolume',
            storage__ctrl__pb2.CTRLDetachVolumeRequest.SerializeToString,
            storage__ctrl__pb2.CTRLDetachVolumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLListVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLListVolumes',
            storage__ctrl__pb2.CTRLListVolumesRequest.SerializeToString,
            storage__ctrl__pb2.CTRLListVolumesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLCreateController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLCreateController',
            storage__ctrl__pb2.CTRLCreateControllerRequest.SerializeToString,
            storage__ctrl__pb2.CTRLCreateControllerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTRLDeleteController(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage_ctrl.Ctrl/CTRLDeleteController',
            storage__ctrl__pb2.CTRLDeleteControllerRequest.SerializeToString,
            storage__ctrl__pb2.CTRLDeleteControllerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
